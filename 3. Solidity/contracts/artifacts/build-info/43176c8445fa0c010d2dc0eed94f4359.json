{
	"id": "43176c8445fa0c010d2dc0eed94f4359",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Admin.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.13;\n\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Admin is Ownable {\n\n    event Whitelisted(address);\n    event Blacklisted(address);\n\n    mapping(address => bool) _whitelist;\n    mapping(address => bool) _blacklist;\n\n    function whitelist(address _address) public onlyOwner {\n        require(!isWhitelisted(_address), \"Address already whitelisted\");\n        require(!isBlackListed(_address), \"Address already blacklisted\");\n        _whitelist[_address] = true;\n        emit Whitelisted(_address);\n    }\n\n    function blacklist(address _address) public onlyOwner {\n        require(!isWhitelisted(_address), \"Address already whitelisted\");\n        require(!isBlackListed(_address), \"Address already blacklisted\");\n        _blacklist[_address] = true;\n        emit Blacklisted(_address);\n    }\n\n    function isWhitelisted(address _address) public view returns (bool) {\n        return _whitelist[_address];\n    }\n\n    function isBlackListed(address _address) public view returns (bool) {\n        return _blacklist[_address];\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Admin.sol": {
				"Admin": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Blacklisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Whitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "blacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isBlackListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Admin.sol\":117:1107  contract Admin is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Admin.sol\":117:1107  contract Admin is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Admin.sol\":117:1107  contract Admin is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Admin.sol\":117:1107  contract Admin is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9b19251a\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe47d6060\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf9f92be4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3af32abf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Admin.sol\":874:986  function isWhitelisted(address _address) public view returns (bool) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Admin.sol\":298:580  function whitelist(address _address) public onlyOwner {... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/Admin.sol\":992:1104  function isBlackListed(address _address) public view returns (bool) {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Admin.sol\":586:868  function blacklist(address _address) public onlyOwner {... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Admin.sol\":874:986  function isWhitelisted(address _address) public view returns (bool) {... */\n    tag_14:\n        /* \"contracts/Admin.sol\":936:940  bool */\n      0x00\n        /* \"contracts/Admin.sol\":959:969  _whitelist */\n      0x01\n        /* \"contracts/Admin.sol\":959:979  _whitelist[_address] */\n      0x00\n        /* \"contracts/Admin.sol\":970:978  _address */\n      dup4\n        /* \"contracts/Admin.sol\":959:979  _whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Admin.sol\":952:979  return _whitelist[_address] */\n      swap1\n      pop\n        /* \"contracts/Admin.sol\":874:986  function isWhitelisted(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Admin.sol\":298:580  function whitelist(address _address) public onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"contracts/Admin.sol\":371:394  isWhitelisted(_address) */\n      tag_47\n        /* \"contracts/Admin.sol\":385:393  _address */\n      dup2\n        /* \"contracts/Admin.sol\":371:384  isWhitelisted */\n      tag_14\n        /* \"contracts/Admin.sol\":371:394  isWhitelisted(_address) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/Admin.sol\":370:394  !isWhitelisted(_address) */\n      iszero\n        /* \"contracts/Admin.sol\":362:426  require(!isWhitelisted(_address), \"Address already whitelisted\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/Admin.sol\":445:468  isBlackListed(_address) */\n      tag_51\n        /* \"contracts/Admin.sol\":459:467  _address */\n      dup2\n        /* \"contracts/Admin.sol\":445:458  isBlackListed */\n      tag_28\n        /* \"contracts/Admin.sol\":445:468  isBlackListed(_address) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/Admin.sol\":444:468  !isBlackListed(_address) */\n      iszero\n        /* \"contracts/Admin.sol\":436:500  require(!isBlackListed(_address), \"Address already blacklisted\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/Admin.sol\":533:537  true */\n      0x01\n        /* \"contracts/Admin.sol\":510:520  _whitelist */\n      dup1\n        /* \"contracts/Admin.sol\":510:530  _whitelist[_address] */\n      0x00\n        /* \"contracts/Admin.sol\":521:529  _address */\n      dup4\n        /* \"contracts/Admin.sol\":510:530  _whitelist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Admin.sol\":510:537  _whitelist[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Admin.sol\":552:573  Whitelisted(_address) */\n      0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54\n        /* \"contracts/Admin.sol\":564:572  _address */\n      dup2\n        /* \"contracts/Admin.sol\":552:573  Whitelisted(_address) */\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Admin.sol\":298:580  function whitelist(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Admin.sol\":992:1104  function isBlackListed(address _address) public view returns (bool) {... */\n    tag_28:\n        /* \"contracts/Admin.sol\":1054:1058  bool */\n      0x00\n        /* \"contracts/Admin.sol\":1077:1087  _blacklist */\n      0x02\n        /* \"contracts/Admin.sol\":1077:1097  _blacklist[_address] */\n      0x00\n        /* \"contracts/Admin.sol\":1088:1096  _address */\n      dup4\n        /* \"contracts/Admin.sol\":1077:1097  _blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Admin.sol\":1070:1097  return _blacklist[_address] */\n      swap1\n      pop\n        /* \"contracts/Admin.sol\":992:1104  function isBlackListed(address _address) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_60\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Admin.sol\":586:868  function blacklist(address _address) public onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/Admin.sol\":659:682  isWhitelisted(_address) */\n      tag_67\n        /* \"contracts/Admin.sol\":673:681  _address */\n      dup2\n        /* \"contracts/Admin.sol\":659:672  isWhitelisted */\n      tag_14\n        /* \"contracts/Admin.sol\":659:682  isWhitelisted(_address) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Admin.sol\":658:682  !isWhitelisted(_address) */\n      iszero\n        /* \"contracts/Admin.sol\":650:714  require(!isWhitelisted(_address), \"Address already whitelisted\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_50\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/Admin.sol\":733:756  isBlackListed(_address) */\n      tag_70\n        /* \"contracts/Admin.sol\":747:755  _address */\n      dup2\n        /* \"contracts/Admin.sol\":733:746  isBlackListed */\n      tag_28\n        /* \"contracts/Admin.sol\":733:756  isBlackListed(_address) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/Admin.sol\":732:756  !isBlackListed(_address) */\n      iszero\n        /* \"contracts/Admin.sol\":724:788  require(!isBlackListed(_address), \"Address already blacklisted\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_54\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \"contracts/Admin.sol\":821:825  true */\n      0x01\n        /* \"contracts/Admin.sol\":798:808  _blacklist */\n      0x02\n        /* \"contracts/Admin.sol\":798:818  _blacklist[_address] */\n      0x00\n        /* \"contracts/Admin.sol\":809:817  _address */\n      dup4\n        /* \"contracts/Admin.sol\":798:818  _blacklist[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Admin.sol\":798:825  _blacklist[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Admin.sol\":840:861  Blacklisted(_address) */\n      0xffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855\n        /* \"contracts/Admin.sol\":852:860  _address */\n      dup2\n        /* \"contracts/Admin.sol\":840:861  Blacklisted(_address) */\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Admin.sol\":586:868  function blacklist(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_84:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_86:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_87:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_108\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_88:\n        /* \"#utility.yul\":641:665   */\n      tag_110\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_87\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_111\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_111:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_89:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_113\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_88\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_116\n      tag_84\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":917:1036   */\n    tag_115:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_117\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_89\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_90:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_91:\n        /* \"#utility.yul\":1353:1374   */\n      tag_120\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_90\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_16:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_122\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_91\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_92:\n        /* \"#utility.yul\":1690:1714   */\n      tag_124\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_87\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_22:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_126\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_93:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2307   */\n    tag_94:\n        /* \"#utility.yul\":2270:2299   */\n      0x4164647265737320616c72656164792077686974656c69737465640000000000\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2300   */\n      mstore\n        /* \"#utility.yul\":2130:2307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2313:2679   */\n    tag_95:\n        /* \"#utility.yul\":2455:2458   */\n      0x00\n        /* \"#utility.yul\":2476:2543   */\n      tag_130\n        /* \"#utility.yul\":2540:2542   */\n      0x1b\n        /* \"#utility.yul\":2535:2538   */\n      dup4\n        /* \"#utility.yul\":2476:2543   */\n      tag_93\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2469:2543   */\n      swap2\n      pop\n        /* \"#utility.yul\":2552:2645   */\n      tag_131\n        /* \"#utility.yul\":2641:2644   */\n      dup3\n        /* \"#utility.yul\":2552:2645   */\n      tag_94\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2670:2672   */\n      0x20\n        /* \"#utility.yul\":2665:2668   */\n      dup3\n        /* \"#utility.yul\":2661:2673   */\n      add\n        /* \"#utility.yul\":2654:2673   */\n      swap1\n      pop\n        /* \"#utility.yul\":2313:2679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2685:3104   */\n    tag_50:\n        /* \"#utility.yul\":2851:2855   */\n      0x00\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2878:2887   */\n      dup3\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"#utility.yul\":2866:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2938:2947   */\n      dup2\n        /* \"#utility.yul\":2932:2936   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      sub\n        /* \"#utility.yul\":2924:2925   */\n      0x00\n        /* \"#utility.yul\":2913:2922   */\n      dup4\n        /* \"#utility.yul\":2909:2926   */\n      add\n        /* \"#utility.yul\":2902:2949   */\n      mstore\n        /* \"#utility.yul\":2966:3097   */\n      tag_133\n        /* \"#utility.yul\":3092:3096   */\n      dup2\n        /* \"#utility.yul\":2966:3097   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2958:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":2685:3104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3110:3287   */\n    tag_96:\n        /* \"#utility.yul\":3250:3279   */\n      0x4164647265737320616c726561647920626c61636b6c69737465640000000000\n        /* \"#utility.yul\":3246:3247   */\n      0x00\n        /* \"#utility.yul\":3238:3244   */\n      dup3\n        /* \"#utility.yul\":3234:3248   */\n      add\n        /* \"#utility.yul\":3227:3280   */\n      mstore\n        /* \"#utility.yul\":3110:3287   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3293:3659   */\n    tag_97:\n        /* \"#utility.yul\":3435:3438   */\n      0x00\n        /* \"#utility.yul\":3456:3523   */\n      tag_136\n        /* \"#utility.yul\":3520:3522   */\n      0x1b\n        /* \"#utility.yul\":3515:3518   */\n      dup4\n        /* \"#utility.yul\":3456:3523   */\n      tag_93\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":3449:3523   */\n      swap2\n      pop\n        /* \"#utility.yul\":3532:3625   */\n      tag_137\n        /* \"#utility.yul\":3621:3624   */\n      dup3\n        /* \"#utility.yul\":3532:3625   */\n      tag_96\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3650:3652   */\n      0x20\n        /* \"#utility.yul\":3645:3648   */\n      dup3\n        /* \"#utility.yul\":3641:3653   */\n      add\n        /* \"#utility.yul\":3634:3653   */\n      swap1\n      pop\n        /* \"#utility.yul\":3293:3659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3665:4084   */\n    tag_54:\n        /* \"#utility.yul\":3831:3835   */\n      0x00\n        /* \"#utility.yul\":3869:3871   */\n      0x20\n        /* \"#utility.yul\":3858:3867   */\n      dup3\n        /* \"#utility.yul\":3854:3872   */\n      add\n        /* \"#utility.yul\":3846:3872   */\n      swap1\n      pop\n        /* \"#utility.yul\":3918:3927   */\n      dup2\n        /* \"#utility.yul\":3912:3916   */\n      dup2\n        /* \"#utility.yul\":3908:3928   */\n      sub\n        /* \"#utility.yul\":3904:3905   */\n      0x00\n        /* \"#utility.yul\":3893:3902   */\n      dup4\n        /* \"#utility.yul\":3889:3906   */\n      add\n        /* \"#utility.yul\":3882:3929   */\n      mstore\n        /* \"#utility.yul\":3946:4077   */\n      tag_139\n        /* \"#utility.yul\":4072:4076   */\n      dup2\n        /* \"#utility.yul\":3946:4077   */\n      tag_97\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3938:4077   */\n      swap1\n      pop\n        /* \"#utility.yul\":3665:4084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4090:4315   */\n    tag_98:\n        /* \"#utility.yul\":4230:4264   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4226:4227   */\n      0x00\n        /* \"#utility.yul\":4218:4224   */\n      dup3\n        /* \"#utility.yul\":4214:4228   */\n      add\n        /* \"#utility.yul\":4207:4265   */\n      mstore\n        /* \"#utility.yul\":4299:4307   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4294:4296   */\n      0x20\n        /* \"#utility.yul\":4286:4292   */\n      dup3\n        /* \"#utility.yul\":4282:4297   */\n      add\n        /* \"#utility.yul\":4275:4308   */\n      mstore\n        /* \"#utility.yul\":4090:4315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4321:4687   */\n    tag_99:\n        /* \"#utility.yul\":4463:4466   */\n      0x00\n        /* \"#utility.yul\":4484:4551   */\n      tag_142\n        /* \"#utility.yul\":4548:4550   */\n      0x26\n        /* \"#utility.yul\":4543:4546   */\n      dup4\n        /* \"#utility.yul\":4484:4551   */\n      tag_93\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":4477:4551   */\n      swap2\n      pop\n        /* \"#utility.yul\":4560:4653   */\n      tag_143\n        /* \"#utility.yul\":4649:4652   */\n      dup3\n        /* \"#utility.yul\":4560:4653   */\n      tag_98\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4678:4680   */\n      0x40\n        /* \"#utility.yul\":4673:4676   */\n      dup3\n        /* \"#utility.yul\":4669:4681   */\n      add\n        /* \"#utility.yul\":4662:4681   */\n      swap1\n      pop\n        /* \"#utility.yul\":4321:4687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4693:5112   */\n    tag_62:\n        /* \"#utility.yul\":4859:4863   */\n      0x00\n        /* \"#utility.yul\":4897:4899   */\n      0x20\n        /* \"#utility.yul\":4886:4895   */\n      dup3\n        /* \"#utility.yul\":4882:4900   */\n      add\n        /* \"#utility.yul\":4874:4900   */\n      swap1\n      pop\n        /* \"#utility.yul\":4946:4955   */\n      dup2\n        /* \"#utility.yul\":4940:4944   */\n      dup2\n        /* \"#utility.yul\":4936:4956   */\n      sub\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4921:4930   */\n      dup4\n        /* \"#utility.yul\":4917:4934   */\n      add\n        /* \"#utility.yul\":4910:4957   */\n      mstore\n        /* \"#utility.yul\":4974:5105   */\n      tag_145\n        /* \"#utility.yul\":5100:5104   */\n      dup2\n        /* \"#utility.yul\":4974:5105   */\n      tag_99\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4966:5105   */\n      swap1\n      pop\n        /* \"#utility.yul\":4693:5112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5300   */\n    tag_100:\n        /* \"#utility.yul\":5258:5292   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5254:5255   */\n      0x00\n        /* \"#utility.yul\":5246:5252   */\n      dup3\n        /* \"#utility.yul\":5242:5256   */\n      add\n        /* \"#utility.yul\":5235:5293   */\n      mstore\n        /* \"#utility.yul\":5118:5300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5672   */\n    tag_101:\n        /* \"#utility.yul\":5448:5451   */\n      0x00\n        /* \"#utility.yul\":5469:5536   */\n      tag_148\n        /* \"#utility.yul\":5533:5535   */\n      0x20\n        /* \"#utility.yul\":5528:5531   */\n      dup4\n        /* \"#utility.yul\":5469:5536   */\n      tag_93\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":5462:5536   */\n      swap2\n      pop\n        /* \"#utility.yul\":5545:5638   */\n      tag_149\n        /* \"#utility.yul\":5634:5637   */\n      dup3\n        /* \"#utility.yul\":5545:5638   */\n      tag_100\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5663:5665   */\n      0x20\n        /* \"#utility.yul\":5658:5661   */\n      dup3\n        /* \"#utility.yul\":5654:5666   */\n      add\n        /* \"#utility.yul\":5647:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5306:5672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:6097   */\n    tag_80:\n        /* \"#utility.yul\":5844:5848   */\n      0x00\n        /* \"#utility.yul\":5882:5884   */\n      0x20\n        /* \"#utility.yul\":5871:5880   */\n      dup3\n        /* \"#utility.yul\":5867:5885   */\n      add\n        /* \"#utility.yul\":5859:5885   */\n      swap1\n      pop\n        /* \"#utility.yul\":5931:5940   */\n      dup2\n        /* \"#utility.yul\":5925:5929   */\n      dup2\n        /* \"#utility.yul\":5921:5941   */\n      sub\n        /* \"#utility.yul\":5917:5918   */\n      0x00\n        /* \"#utility.yul\":5906:5915   */\n      dup4\n        /* \"#utility.yul\":5902:5919   */\n      add\n        /* \"#utility.yul\":5895:5942   */\n      mstore\n        /* \"#utility.yul\":5959:6090   */\n      tag_151\n        /* \"#utility.yul\":6085:6089   */\n      dup2\n        /* \"#utility.yul\":5959:6090   */\n      tag_101\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5951:6090   */\n      swap1\n      pop\n        /* \"#utility.yul\":5678:6097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200fae28204e725ed2484b541dcd14bb0f48934f9aad349c8dbf36af80b532c41a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 50,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109788061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639b19251a1161005b5780639b19251a146100da578063e47d6060146100f6578063f2fde38b14610126578063f9f92be4146101425761007d565b80633af32abf14610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c600480360381019061009791906106ce565b61015e565b6040516100a99190610716565b60405180910390f35b6100ba6101b4565b005b6100c46101c8565b6040516100d19190610740565b60405180910390f35b6100f460048036038101906100ef91906106ce565b6101f1565b005b610110600480360381019061010b91906106ce565b61031c565b60405161011d9190610716565b60405180910390f35b610140600480360381019061013b91906106ce565b610372565b005b61015c600480360381019061015791906106ce565b6103f5565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6101bc610521565b6101c6600061059f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f9610521565b6102028161015e565b15610242576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610239906107b8565b60405180910390fd5b61024b8161031c565b1561028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610824565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516103119190610740565b60405180910390a150565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61037a610521565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e0906108b6565b60405180910390fd5b6103f28161059f565b50565b6103fd610521565b6104068161015e565b15610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d906107b8565b60405180910390fd5b61044f8161031c565b1561048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690610824565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855816040516105169190610740565b60405180910390a150565b610529610663565b73ffffffffffffffffffffffffffffffffffffffff166105476101c8565b73ffffffffffffffffffffffffffffffffffffffff161461059d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059490610922565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069b82610670565b9050919050565b6106ab81610690565b81146106b657600080fd5b50565b6000813590506106c8816106a2565b92915050565b6000602082840312156106e4576106e361066b565b5b60006106f2848285016106b9565b91505092915050565b60008115159050919050565b610710816106fb565b82525050565b600060208201905061072b6000830184610707565b92915050565b61073a81610690565b82525050565b60006020820190506107556000830184610731565b92915050565b600082825260208201905092915050565b7f4164647265737320616c72656164792077686974656c69737465640000000000600082015250565b60006107a2601b8361075b565b91506107ad8261076c565b602082019050919050565b600060208201905081810360008301526107d181610795565b9050919050565b7f4164647265737320616c726561647920626c61636b6c69737465640000000000600082015250565b600061080e601b8361075b565b9150610819826107d8565b602082019050919050565b6000602082019050818103600083015261083d81610801565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108a060268361075b565b91506108ab82610844565b604082019050919050565b600060208201905081810360008301526108cf81610893565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061090c60208361075b565b9150610917826108d6565b602082019050919050565b6000602082019050818103600083015261093b816108ff565b905091905056fea26469706673582212200fae28204e725ed2484b541dcd14bb0f48934f9aad349c8dbf36af80b532c41a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x978 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x142 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x521 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x0 PUSH2 0x59F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x521 JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x15E JUMP JUMPDEST ISZERO PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x31C JUMP JUMPDEST ISZERO PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37A PUSH2 0x521 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x59F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x521 JUMP JUMPDEST PUSH2 0x406 DUP2 PUSH2 0x15E JUMP JUMPDEST ISZERO PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x31C JUMP JUMPDEST ISZERO PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x529 PUSH2 0x663 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x547 PUSH2 0x1C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69B DUP3 PUSH2 0x670 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP2 PUSH2 0x690 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C8 DUP2 PUSH2 0x6A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E4 JUMPI PUSH2 0x6E3 PUSH2 0x66B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F2 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x72B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x755 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320616C72656164792077686974656C69737465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 PUSH1 0x1B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD DUP3 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1 DUP2 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320616C726561647920626C61636B6C69737465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80E PUSH1 0x1B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x819 DUP3 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83D DUP2 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A0 PUSH1 0x26 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x8AB DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CF DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C PUSH1 0x20 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x917 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x93B DUP2 PUSH2 0x8FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAE 0x28 KECCAK256 0x4E PUSH19 0x5ED2484B541DCD14BB0F48934F9AAD349C8DBF CALLDATASIZE 0xAF DUP1 0xB5 ORIGIN 0xC4 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "117:990:2:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;117:990:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;117:990:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1313,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 1635,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1439,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@blacklist_223": {
									"entryPoint": 1013,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isBlackListed_247": {
									"entryPoint": 796,
									"id": 247,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isWhitelisted_235": {
									"entryPoint": 350,
									"id": 235,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 456,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 436,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 882,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@whitelist_189": {
									"entryPoint": 497,
									"id": 189,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2": {
									"entryPoint": 2008,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6100:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1668:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1656:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1663:3:3",
														"type": ""
													}
												],
												"src": "1603:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1835:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1797:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1809:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1820:4:3",
														"type": ""
													}
												],
												"src": "1727:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2089:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2023:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2028:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2039:11:3",
														"type": ""
													}
												],
												"src": "1955:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2236:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:3"
																	},
																	{
																		"hexValue": "4164647265737320616c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2270:29:3",
																		"type": "",
																		"value": "Address already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2247:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2228:6:3",
														"type": ""
													}
												],
												"src": "2130:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2469:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2535:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2540:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2476:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2476:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2641:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
																	"nodeType": "YulIdentifier",
																	"src": "2552:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2552:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2654:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2665:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2670:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2447:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2455:3:3",
														"type": ""
													}
												],
												"src": "2313:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2913:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2924:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2932:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2938:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2928:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2902:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2958:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3092:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2966:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2958:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2836:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2851:4:3",
														"type": ""
													}
												],
												"src": "2685:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3216:71:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3246:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3234:14:3"
																	},
																	{
																		"hexValue": "4164647265737320616c726561647920626c61636b6c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3250:29:3",
																		"type": "",
																		"value": "Address already blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3227:53:3"
														}
													]
												},
												"name": "store_literal_in_memory_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3208:6:3",
														"type": ""
													}
												],
												"src": "3110:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3439:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3449:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3515:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3520:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3456:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3449:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3621:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
																	"nodeType": "YulIdentifier",
																	"src": "3532:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3532:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3532:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3634:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3645:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3641:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3634:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3427:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3435:3:3",
														"type": ""
													}
												],
												"src": "3293:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3836:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3846:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3858:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3869:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3854:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3854:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3846:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3893:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3904:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3889:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3912:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3918:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3882:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3882:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3938:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4072:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3946:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3938:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3816:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3831:4:3",
														"type": ""
													}
												],
												"src": "3665:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4196:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4218:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4226:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4214:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4230:34:3",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4207:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4286:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4282:15:3"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4299:8:3",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4275:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4275:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4188:6:3",
														"type": ""
													}
												],
												"src": "4090:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4467:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4477:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4543:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4484:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4484:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4649:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "4560:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4560:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4560:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4662:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4673:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4662:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4455:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4463:3:3",
														"type": ""
													}
												],
												"src": "4321:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4864:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4874:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4886:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4897:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4882:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4874:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4932:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4917:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4917:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4940:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4946:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4910:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4966:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5100:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4974:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4974:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4966:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4844:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4859:4:3",
														"type": ""
													}
												],
												"src": "4693:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5224:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5246:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5254:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:14:3"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5258:34:3",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5235:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5216:6:3",
														"type": ""
													}
												],
												"src": "5118:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5462:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5528:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5533:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5469:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5634:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "5545:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5647:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5658:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5654:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5647:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5440:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5448:3:3",
														"type": ""
													}
												],
												"src": "5306:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5849:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5859:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5871:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5882:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5867:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5859:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5906:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5917:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5902:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5902:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5925:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5931:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5921:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5895:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5895:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5895:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5951:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6085:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5959:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5951:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5829:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5844:4:3",
														"type": ""
													}
												],
												"src": "5678:419:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address already whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address already blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80639b19251a1161005b5780639b19251a146100da578063e47d6060146100f6578063f2fde38b14610126578063f9f92be4146101425761007d565b80633af32abf14610082578063715018a6146100b25780638da5cb5b146100bc575b600080fd5b61009c600480360381019061009791906106ce565b61015e565b6040516100a99190610716565b60405180910390f35b6100ba6101b4565b005b6100c46101c8565b6040516100d19190610740565b60405180910390f35b6100f460048036038101906100ef91906106ce565b6101f1565b005b610110600480360381019061010b91906106ce565b61031c565b60405161011d9190610716565b60405180910390f35b610140600480360381019061013b91906106ce565b610372565b005b61015c600480360381019061015791906106ce565b6103f5565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6101bc610521565b6101c6600061059f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101f9610521565b6102028161015e565b15610242576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610239906107b8565b60405180910390fd5b61024b8161031c565b1561028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610824565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54816040516103119190610740565b60405180910390a150565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b61037a610521565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e0906108b6565b60405180910390fd5b6103f28161059f565b50565b6103fd610521565b6104068161015e565b15610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d906107b8565b60405180910390fd5b61044f8161031c565b1561048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048690610824565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855816040516105169190610740565b60405180910390a150565b610529610663565b73ffffffffffffffffffffffffffffffffffffffff166105476101c8565b73ffffffffffffffffffffffffffffffffffffffff161461059d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059490610922565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069b82610670565b9050919050565b6106ab81610690565b81146106b657600080fd5b50565b6000813590506106c8816106a2565b92915050565b6000602082840312156106e4576106e361066b565b5b60006106f2848285016106b9565b91505092915050565b60008115159050919050565b610710816106fb565b82525050565b600060208201905061072b6000830184610707565b92915050565b61073a81610690565b82525050565b60006020820190506107556000830184610731565b92915050565b600082825260208201905092915050565b7f4164647265737320616c72656164792077686974656c69737465640000000000600082015250565b60006107a2601b8361075b565b91506107ad8261076c565b602082019050919050565b600060208201905081810360008301526107d181610795565b9050919050565b7f4164647265737320616c726561647920626c61636b6c69737465640000000000600082015250565b600061080e601b8361075b565b9150610819826107d8565b602082019050919050565b6000602082019050818103600083015261083d81610801565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108a060268361075b565b91506108ab82610844565b604082019050919050565b600060208201905081810360008301526108cf81610893565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061090c60208361075b565b9150610917826108d6565b602082019050919050565b6000602082019050818103600083015261093b816108ff565b905091905056fea26469706673582212200fae28204e725ed2484b541dcd14bb0f48934f9aad349c8dbf36af80b532c41a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xF9F92BE4 EQ PUSH2 0x142 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBA PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC4 PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEF SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x372 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x521 JUMP JUMPDEST PUSH2 0x1C6 PUSH1 0x0 PUSH2 0x59F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F9 PUSH2 0x521 JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x15E JUMP JUMPDEST ISZERO PUSH2 0x242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x239 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x31C JUMP JUMPDEST ISZERO PUSH2 0x28B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x282 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37A PUSH2 0x521 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E0 SWAP1 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F2 DUP2 PUSH2 0x59F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x521 JUMP JUMPDEST PUSH2 0x406 DUP2 PUSH2 0x15E JUMP JUMPDEST ISZERO PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x31C JUMP JUMPDEST ISZERO PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x824 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xFFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855 DUP2 PUSH1 0x40 MLOAD PUSH2 0x516 SWAP2 SWAP1 PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x529 PUSH2 0x663 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x547 PUSH2 0x1C8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x922 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x69B DUP3 PUSH2 0x670 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AB DUP2 PUSH2 0x690 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6C8 DUP2 PUSH2 0x6A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E4 JUMPI PUSH2 0x6E3 PUSH2 0x66B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F2 DUP5 DUP3 DUP6 ADD PUSH2 0x6B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x710 DUP2 PUSH2 0x6FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x72B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73A DUP2 PUSH2 0x690 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x755 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x731 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320616C72656164792077686974656C69737465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A2 PUSH1 0x1B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x7AD DUP3 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D1 DUP2 PUSH2 0x795 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4164647265737320616C726561647920626C61636B6C69737465640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80E PUSH1 0x1B DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x819 DUP3 PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83D DUP2 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A0 PUSH1 0x26 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x8AB DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CF DUP2 PUSH2 0x893 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C PUSH1 0x20 DUP4 PUSH2 0x75B JUMP JUMPDEST SWAP2 POP PUSH2 0x917 DUP3 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x93B DUP2 PUSH2 0x8FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAE 0x28 KECCAK256 0x4E PUSH19 0x5ED2484B541DCD14BB0F48934F9AAD349C8DBF CALLDATASIZE 0xAF DUP1 0xB5 ORIGIN 0xC4 BYTE PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "117:990:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:282:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;992:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;586:282:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;874:112;936:4;959:10;:20;970:8;959:20;;;;;;;;;;;;;;;;;;;;;;;;;952:27;;874:112;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;298:282:2:-;1094:13:0;:11;:13::i;:::-;371:23:2::1;385:8;371:13;:23::i;:::-;370:24;362:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;445:23;459:8;445:13;:23::i;:::-;444:24;436:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;533:4;510:10:::0;:20:::1;521:8;510:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;552:21;564:8;552:21;;;;;;:::i;:::-;;;;;;;;298:282:::0;:::o;992:112::-;1054:4;1077:10;:20;1088:8;1077:20;;;;;;;;;;;;;;;;;;;;;;;;;1070:27;;992:112;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;586:282:2:-;1094:13:0;:11;:13::i;:::-;659:23:2::1;673:8;659:13;:23::i;:::-;658:24;650:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;733:23;747:8;733:13;:23::i;:::-;732:24;724:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;821:4;798:10;:20;809:8;798:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;840:21;852:8;840:21;;;;;;:::i;:::-;;;;;;;;586:282:::0;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:177::-;2270:29;2266:1;2258:6;2254:14;2247:53;2130:177;:::o;2313:366::-;2455:3;2476:67;2540:2;2535:3;2476:67;:::i;:::-;2469:74;;2552:93;2641:3;2552:93;:::i;:::-;2670:2;2665:3;2661:12;2654:19;;2313:366;;;:::o;2685:419::-;2851:4;2889:2;2878:9;2874:18;2866:26;;2938:9;2932:4;2928:20;2924:1;2913:9;2909:17;2902:47;2966:131;3092:4;2966:131;:::i;:::-;2958:139;;2685:419;;;:::o;3110:177::-;3250:29;3246:1;3238:6;3234:14;3227:53;3110:177;:::o;3293:366::-;3435:3;3456:67;3520:2;3515:3;3456:67;:::i;:::-;3449:74;;3532:93;3621:3;3532:93;:::i;:::-;3650:2;3645:3;3641:12;3634:19;;3293:366;;;:::o;3665:419::-;3831:4;3869:2;3858:9;3854:18;3846:26;;3918:9;3912:4;3908:20;3904:1;3893:9;3889:17;3882:47;3946:131;4072:4;3946:131;:::i;:::-;3938:139;;3665:419;;;:::o;4090:225::-;4230:34;4226:1;4218:6;4214:14;4207:58;4299:8;4294:2;4286:6;4282:15;4275:33;4090:225;:::o;4321:366::-;4463:3;4484:67;4548:2;4543:3;4484:67;:::i;:::-;4477:74;;4560:93;4649:3;4560:93;:::i;:::-;4678:2;4673:3;4669:12;4662:19;;4321:366;;;:::o;4693:419::-;4859:4;4897:2;4886:9;4882:18;4874:26;;4946:9;4940:4;4936:20;4932:1;4921:9;4917:17;4910:47;4974:131;5100:4;4974:131;:::i;:::-;4966:139;;4693:419;;;:::o;5118:182::-;5258:34;5254:1;5246:6;5242:14;5235:58;5118:182;:::o;5306:366::-;5448:3;5469:67;5533:2;5528:3;5469:67;:::i;:::-;5462:74;;5545:93;5634:3;5545:93;:::i;:::-;5663:2;5658:3;5654:12;5647:19;;5306:366;;;:::o;5678:419::-;5844:4;5882:2;5871:9;5867:18;5859:26;;5931:9;5925:4;5921:20;5917:1;5906:9;5902:17;5895:47;5959:131;6085:4;5959:131;:::i;:::-;5951:139;;5678:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "484800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"blacklist(address)": "infinite",
								"isBlackListed(address)": "2905",
								"isWhitelisted(address)": "2884",
								"owner()": "2567",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30788",
								"whitelist(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 1107,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200fae28204e725ed2484b541dcd14bb0f48934f9aad349c8dbf36af80b532c41a64736f6c634300080d0033",
									".code": [
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "9B19251A"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "9B19251A"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "E47D6060"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "F9F92BE4"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "3AF32ABF"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 117,
											"end": 1107,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 298,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 936,
											"end": 940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 969,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 959,
											"end": 979,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 959,
											"end": 979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 952,
											"end": 979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 952,
											"end": 979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 874,
											"end": 986,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 371,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 385,
											"end": 393,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 371,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 371,
											"end": 394,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 371,
											"end": 394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 362,
											"end": 426,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 362,
											"end": 426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 459,
											"end": 467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 445,
											"end": 468,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 468,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 445,
											"end": 468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 444,
											"end": 468,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 436,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 436,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 533,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 510,
											"end": 520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 510,
											"end": 530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 530,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 510,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 510,
											"end": 537,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 510,
											"end": 537,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 510,
											"end": 537,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "AAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54"
										},
										{
											"begin": 564,
											"end": 572,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 552,
											"end": 573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 552,
											"end": 573,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 298,
											"end": 580,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1054,
											"end": 1058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1087,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1077,
											"end": 1097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1070,
											"end": 1097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 992,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 659,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 673,
											"end": 681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 659,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 659,
											"end": 682,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 682,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 659,
											"end": 682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 658,
											"end": 682,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 650,
											"end": 714,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 650,
											"end": 714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 733,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 747,
											"end": 755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 733,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 733,
											"end": 756,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 756,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 733,
											"end": 756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 756,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 724,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 724,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 821,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 798,
											"end": 808,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 817,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 818,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 798,
											"end": 818,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 798,
											"end": 825,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 798,
											"end": 825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 798,
											"end": 825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "FFA4E6181777692565CF28528FC88FD1516EA86B56DA075235FA575AF6A4B855"
										},
										{
											"begin": 852,
											"end": 860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 840,
											"end": 861,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 586,
											"end": 868,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2130,
											"end": 2307,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2130,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2299,
											"name": "PUSH",
											"source": 3,
											"value": "4164647265737320616C72656164792077686974656C69737465640000000000"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2130,
											"end": 2307,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2535,
											"end": 2538,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2476,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2543,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2543,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2552,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2665,
											"end": 2668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2673,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2313,
											"end": 2679,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2926,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2949,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3092,
											"end": 3096,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2966,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 3097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 3097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2685,
											"end": 3104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3110,
											"end": 3287,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3110,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3279,
											"name": "PUSH",
											"source": 3,
											"value": "4164647265737320616C726561647920626C61636B6C69737465640000000000"
										},
										{
											"begin": 3246,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3280,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3287,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3287,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3435,
											"end": 3438,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3520,
											"end": 3522,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 3515,
											"end": 3518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3456,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3449,
											"end": 3523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3621,
											"end": 3624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3532,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3652,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3645,
											"end": 3648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3659,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3831,
											"end": 3835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3871,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3912,
											"end": 3916,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3902,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3906,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 3929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 4072,
											"end": 4076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3946,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 4077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3938,
											"end": 4077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3665,
											"end": 4084,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4090,
											"end": 4315,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4090,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4230,
											"end": 4264,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4226,
											"end": 4227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4265,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4307,
											"name": "PUSH",
											"source": 3,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4292,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4090,
											"end": 4315,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4090,
											"end": 4315,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4463,
											"end": 4466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4548,
											"end": 4550,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4543,
											"end": 4546,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4484,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4484,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 4484,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4649,
											"end": 4652,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4560,
											"end": 4653,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4560,
											"end": 4653,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 4560,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4680,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4669,
											"end": 4681,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4662,
											"end": 4681,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4321,
											"end": 4687,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4899,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 4895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 4900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4940,
											"end": 4944,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4956,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4917,
											"end": 4934,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4957,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5100,
											"end": 5104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4974,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4974,
											"end": 5105,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4974,
											"end": 5105,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4974,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5105,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 5105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4693,
											"end": 5112,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5118,
											"end": 5300,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5118,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5258,
											"end": 5292,
											"name": "PUSH",
											"source": 3,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5242,
											"end": 5256,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5293,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5533,
											"end": 5535,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5469,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5462,
											"end": 5536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5545,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5663,
											"end": 5665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5658,
											"end": 5661,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5654,
											"end": 5666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5647,
											"end": 5666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5306,
											"end": 5672,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5844,
											"end": 5848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5867,
											"end": 5885,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5885,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5931,
											"end": 5940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5919,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5895,
											"end": 5942,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 6085,
											"end": 6089,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5959,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5959,
											"end": 6090,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5959,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5959,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5951,
											"end": 6090,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5951,
											"end": 6090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5678,
											"end": 6097,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blacklist(address)": "f9f92be4",
							"isBlackListed(address)": "e47d6060",
							"isWhitelisted(address)": "3af32abf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBlackListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Admin.sol\":\"Admin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/Admin.sol\":{\"keccak256\":\"0xce2884f9a7aea7b9b54e3f073d695d84474c9fd47828a7865f41ff5fe02f8ff0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://971cbed51b4563eb8ca330569c3671c7bbe7e82de4936b3cd0a4e7718287ecd3\",\"dweb:/ipfs/QmZw85q9o8y6uB5T5M1Ly5fKaJu5KXqBSLcWndQa6DuPSz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Admin.sol:Admin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 151,
								"contract": "contracts/Admin.sol:Admin",
								"label": "_whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 155,
								"contract": "contracts/Admin.sol:Admin",
								"label": "_blacklist",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/Admin.sol": {
				"ast": {
					"absolutePath": "contracts/Admin.sol",
					"exportedSymbols": {
						"Admin": [
							248
						],
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 249,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "37:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 249,
							"sourceUnit": 113,
							"src": "63:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 138,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "135:7:2"
									},
									"id": 139,
									"nodeType": "InheritanceSpecifier",
									"src": "135:7:2"
								}
							],
							"canonicalName": "Admin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 248,
							"linearizedBaseContracts": [
								248,
								112,
								134
							],
							"name": "Admin",
							"nameLocation": "126:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "aab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
									"id": 143,
									"name": "Whitelisted",
									"nameLocation": "156:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "168:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:9:2"
									},
									"src": "150:27:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ffa4e6181777692565cf28528fc88fd1516ea86b56da075235fa575af6a4b855",
									"id": 147,
									"name": "Blacklisted",
									"nameLocation": "188:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "200:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:9:2"
									},
									"src": "182:27:2"
								},
								{
									"constant": false,
									"id": 151,
									"mutability": "mutable",
									"name": "_whitelist",
									"nameLocation": "240:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "215:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 150,
										"keyType": {
											"id": 148,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 149,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "234:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 155,
									"mutability": "mutable",
									"name": "_blacklist",
									"nameLocation": "281:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 248,
									"src": "256:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 154,
										"keyType": {
											"id": 152,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "264:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "256:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 153,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "275:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "352:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "370:24:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 164,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "385:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 163,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "371:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "371:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c72656164792077686974656c6973746564",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "396:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
																"typeString": "literal_string \"Address already whitelisted\""
															},
															"value": "Address already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
																"typeString": "literal_string \"Address already whitelisted\""
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "362:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "362:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "362:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "444:24:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 172,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 157,
																		"src": "459:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 171,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "445:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "445:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c726561647920626c61636b6c6973746564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "470:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
																"typeString": "literal_string \"Address already blacklisted\""
															},
															"value": "Address already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
																"typeString": "literal_string \"Address already blacklisted\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "436:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "436:64:2"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 178,
															"name": "_whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "510:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 180,
														"indexExpression": {
															"id": 179,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "521:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "510:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "533:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "510:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "510:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 185,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "564:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "Whitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "552:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "552:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "EmitStatement",
												"src": "547:26:2"
											}
										]
									},
									"functionSelector": "9b19251a",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 160,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 159,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "342:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "342:9:2"
										}
									],
									"name": "whitelist",
									"nameLocation": "307:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "325:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "317:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:18:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:0:2"
									},
									"scope": 248,
									"src": "298:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "640:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "658:24:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 198,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "673:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 197,
																	"name": "isWhitelisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "659:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "659:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c72656164792077686974656c6973746564",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "684:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
																"typeString": "literal_string \"Address already whitelisted\""
															},
															"value": "Address already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c94cfc09b0a95856b0c03a6738ccc9178c55368cabf2cc4947b681c4af152a57",
																"typeString": "literal_string \"Address already whitelisted\""
															}
														],
														"id": 196,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "650:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "650:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "650:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "732:24:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 206,
																		"name": "_address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "747:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 205,
																	"name": "isBlackListed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "733:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "733:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320616c726561647920626c61636b6c6973746564",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "758:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
																"typeString": "literal_string \"Address already blacklisted\""
															},
															"value": "Address already blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2",
																"typeString": "literal_string \"Address already blacklisted\""
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "724:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "724:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "724:64:2"
											},
											{
												"expression": {
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 212,
															"name": "_blacklist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "798:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 214,
														"indexExpression": {
															"id": 213,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "809:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "798:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "821:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "798:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 217,
												"nodeType": "ExpressionStatement",
												"src": "798:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 219,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "852:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 218,
														"name": "Blacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "840:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "840:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "EmitStatement",
												"src": "835:26:2"
											}
										]
									},
									"functionSelector": "f9f92be4",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 193,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "630:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "630:9:2"
										}
									],
									"name": "blacklist",
									"nameLocation": "595:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "613:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "605:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "604:18:2"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:0:2"
									},
									"scope": 248,
									"src": "586:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "942:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 230,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "959:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 232,
													"indexExpression": {
														"id": 231,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "970:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "959:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "952:27:2"
											}
										]
									},
									"functionSelector": "3af32abf",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "883:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "905:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "897:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:18:2"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "936:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "936:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "935:6:2"
									},
									"scope": 248,
									"src": "874:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "1060:44:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 242,
														"name": "_blacklist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "1077:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 244,
													"indexExpression": {
														"id": 243,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1088:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1077:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 241,
												"id": 245,
												"nodeType": "Return",
												"src": "1070:27:2"
											}
										]
									},
									"functionSelector": "e47d6060",
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBlackListed",
									"nameLocation": "1001:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1023:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1015:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:18:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "1054:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:6:2"
									},
									"scope": 248,
									"src": "992:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 249,
							"src": "117:990:2",
							"usedErrors": []
						}
					],
					"src": "37:1070:2"
				},
				"id": 2
			}
		}
	}
}